{
  "text": [
    "",
    "(func a ",
    "  (letted 1 986afbd80685db3256fcc1cacbf2f47e)",
    ")"
  ],
  "letted": {
    "fstListElem_asInt_sub1": [
      "",
      "[",
      "  (native unIData) ",
      "  [",
      "    (native headList) ",
      "    (-1)",
      "  ]",
      "]"
    ],
    "get_fields_sub2": [
      "",
      "[",
      "  (hoisted get_raw_fields) ",
      "  (-2)",
      "]"
    ],
    "fst_field_sub2": [
      "",
      "[",
      "  (native headList) ",
      "  (letted 2 get_fields_sub2)",
      "]"
    ],
    "fst_field_sub2_fields": [
      "",
      "[",
      "  (hoisted get_raw_fields) ",
      "  (letted 2 fst_field_sub2)",
      "]"
    ],
    "fst_field_sub2_fst_field": [
      "",
      "[",
      "  (native headList) ",
      "  (letted 2 fst_field_sub2_fields)",
      "]"
    ],
    "snd_field_sub2": [
      "",
      "[",
      "  (hoisted sndList) ",
      "  (letted 2 get_fields_sub2)",
      "]"
    ],
    "snd_field_sub2_fields": [
      "",
      "[",
      "  (hoisted get_raw_fields) ",
      "  (letted 2 snd_field_sub2)",
      "]"
    ],
    "snd_field_sub2_fst_field": [
      "",
      "[",
      "  (native headList) ",
      "  (letted 2 snd_field_sub2_fields)",
      "]"
    ],
    "986afbd80685db3256fcc1cacbf2f47e": [
      "",
      "[",
      "  [",
      "    (native equalsInteger) ",
      "    [",
      "      (func a ",
      "        [",
      "          [",
      "            [",
      "              [",
      "                (hoisted match3Ctors) ",
      "                (letted 2 snd_field_sub2_fst_field)",
      "              ] ",
      "              a",
      "            ] ",
      "            (func b ",
      "              (letted 3 fstListElem_asInt_sub1)",
      "            )",
      "          ] ",
      "          a",
      "        ]",
      "      ) ",
      "      (func a (error)",
      "      )",
      "    ]",
      "  ] ",
      "  [",
      "    (func a ",
      "      [",
      "        [",
      "          [",
      "            [",
      "              (hoisted match3Ctors) ",
      "              (letted 2 fst_field_sub2_fst_field)",
      "            ] ",
      "            a",
      "          ] ",
      "          (func b ",
      "            (letted 3 fstListElem_asInt_sub1)",
      "          )",
      "        ] ",
      "        a",
      "      ]",
      "    ) ",
      "    (func a (error)",
      "    )",
      "  ]",
      "]"
    ]
  },
  "hoisted": {
    "get_raw_fields": [
      "",
      "(func a ",
      "  [",
      "    (native sndPair) ",
      "    [",
      "      (native unConstrData) ",
      "      a",
      "    ]",
      "  ]",
      ")"
    ],
    "sndList": [
      "",
      "(func a ",
      "  [",
      "    (native headList) ",
      "    [",
      "      (native tailList) ",
      "      a",
      "    ]",
      "  ]",
      ")"
    ],
    "match3Ctors": [
      "",
      "(func a ",
      "  (func b ",
      "    (func c ",
      "      (func d ",
      "        [",
      "          (func e ",
      "            [",
      "              [",
      "                (func f ",
      "                  (force ",
      "                    [",
      "                      [",
      "                        [",
      "                          (native ifThenElse) ",
      "                          [",
      "                            f ",
      "                            (const int 0)",
      "                          ]",
      "                        ] ",
      "                        (delay ",
      "                          d",
      "                        )",
      "                      ] ",
      "                      (delay ",
      "                        (force ",
      "                          [",
      "                            [",
      "                              [",
      "                                (native ifThenElse) ",
      "                                [",
      "                                  f ",
      "                                  (const int 1)",
      "                                ]",
      "                              ] ",
      "                              (delay ",
      "                                c",
      "                              )",
      "                            ] ",
      "                            (delay ",
      "                              (force ",
      "                                [",
      "                                  [",
      "                                    [",
      "                                      (native ifThenElse) ",
      "                                      [",
      "                                        f ",
      "                                        (const int 2)",
      "                                      ]",
      "                                    ] ",
      "                                    (delay ",
      "                                      b",
      "                                    )",
      "                                  ] ",
      "                                  (delay (error)",
      "                                  )",
      "                                ]",
      "                              )",
      "                            )",
      "                          ]",
      "                        )",
      "                      )",
      "                    ]",
      "                  )",
      "                ) ",
      "                [",
      "                  (native equalsInteger) ",
      "                  [",
      "                    (native fstPair) ",
      "                    e",
      "                  ]",
      "                ]",
      "              ] ",
      "              [",
      "                (native sndPair) ",
      "                e",
      "              ]",
      "            ]",
      "          ) ",
      "          [",
      "            (native unConstrData) ",
      "            a",
      "          ]",
      "        ]",
      "      )",
      "    )",
      "  )",
      ")"
    ]
  }
}